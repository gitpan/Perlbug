# Perlbug site configuration
# (C) 2000 Richard Foley RFI perlbug@rfi.net
# $Id: tmtowtdi_Configuration,v 1.11 2001/04/21 19:27:23 perlbug Exp $
#

my $h_Config = {
	#CURRENT
	'CURRENT' 	=> {								#  
		'context' 	=> 'text',                      # /(text|html)/i
		'debug'		=> '',		                    # /[cmsx0-5]/i 
		'format'	=> 'a',                         # /[ahilx]/i
		'framed'	=> 1,                           # wasn't me guv! :-)
		'log_file'	=> '',                          # placeholder
		'tmp_file'	=> '',                          # placeholder
		'isatest'	=> 0,                           # ! 0=normal 1=maintainer 2=print
		'switches'	=> 'bcfghjmnoprstu',            # minimal
		'url'		=> 'perlbug.cgi',               # start point 
		'user'		=> 'generic',			  		# user
	},
	#DATABASE
	'DATABASE'	=> {								# 
		# -t(no create statements) -d(no data) -c(all create and data) -w(where...)
		'backup_args'  	 => '-l',                	# default all data and create statements
		'backup_command' => '/usr/bin/mysqldump',   # backup tool
		'backup_interval'=> 7, 			      		# auto backup interval in days
		'connect' 	     => '', 				  	# use this if set
		'database'       => 'perlbug',              # database to connect to
		'engine'         => 'Mysql',                # Mysql | Oracle support (via DBI!)
		'latest'         => 'Perlbug.sql.gz',       # name for latest db backup
		'passfile'       => 'x2',                   # database password 
		'password'       => 'x6vmdH1Z',             # database password
		'remote'         => 'n',                    # <n>o|<y>es=readonly (disabled) 
		'sqlhost'        => 'tmtowtdi.valueclick.com', # host machine (209.45.167.243)
		'tableprefix'    => 'pb_',                	# swap between data tables
		'user'           => 'perlbug',              # username on db
	},
	#DIRECTORY 
	'DIRECTORY' => {								# 
		'arch'    		=> '/home/perlbug/archive', # archival storage (/var/bak)
		'config'		=> '/home/perlbug/config',   # config directory
		'lists'    		=> '/home/perlmail/perl5-porters/archive', # mailing lists (multiple)
		'root'     		=> '/home/perlbug/Live',    # root directory of Perlbug :-)
		'spool' 		=> '/home/perlbug/spool',   # spool dir (could be /tmp)
		'text'  		=> '/home/perlbug/Live/text',# site specific text dir (~user/text)
		'web'  			=> '/home/perlbug/Live/web',# site specific web dir (~user/web)
	},
	#EMAIL                             
	'EMAIL'		=> { 
		'bugdb'        	=> 'bugdb@perl.org',             		# mail interface
		'bugtron'       => 'perlbug@perl.org',           		# perlbug report new bugs -> target!
		'deny_from'     => '(postmaster|MAILER\-DAEMON)',		# (regex) don't accept mail from here
		'domain'        => 'bugs.perl.org',						# for administration, etc
		'from'          => 'perlbugtron@bugs.perl.org',  		# safe from address (safe sink)
		'hint'          => 'Hint: mail should include output from "perl -V"', # hint
		'help'          => 'help@bugs.perl.org', 				# help
		'mailer'        => 'sendmail',      					# mailer to use
		'master_list'   => 'p5p_list',      			    	# in config dir! list of admin ok mail addresses
		'match'         => '\bperl|perl\b',              		# new bug recogniser
		'test'          => 'bugdbtest@bugs.perl.org',    		# !
		'X-Test'        => 'X-Perlbug-Test',             		# test header  
	}, 
	#FORWARD (transparent forwards to address, undef -> generic) - was reply
	'FORWARD'	=> { 
		'generic'   	=> [qw(perl5-porters@perl.org)],  
		'macos'     	=> [qw(macperl-porters@macperl.org)],        # f
		'win32'     	=> [qw(perl-win32-porters@activestate.com)], # f
		'ok'            => [qw(perl-ok@perl.org)],					 # f
		'test'          => [qw(forwardtest@bugs.perl.org)],			 # f
	},
	#FEEDBACK on tickets (active|admin|cc|maintainer|group|master|source)
	'FEEDBACK'	=> { 
		'auto'			=> 'maintainer',	        			# 
		'delete'  		=> 'admin|maintainer|group', 			# 
		'new' 			=> 'group|maintainer',					# 
		'reminder'  	=> 'group|source',           			#
		'update'  		=> 'admin|cc|group|source', 			# 
	},
	#SYSTEM
	'SYSTEM' 	=> {								# 
		'admin_switches'=> 'aACDGiILMNPTxXyz',     # admin switches, in _opposition_ to users (B)
		'assign'		=> 5,                  		# max tickets to assign/admin
		'bugmaster'		=> 'richardf',		  		# master admin 
		'cachable'		=> 1,						# cachable objects?
		'compress'		=> 'gzip',					# compression tool
		'enabled'		=> 1,			  			# enabler
		'hostname'		=> 'tmtowtdi',              # expected hostname of machine
		'maintainer'    => 'perlbug@rfi.net',       # address
		'max_age'       => 3,                       # max age of log files in days
		'max_errors'    => 1,                       # max num of errors before exiting
		'path'          => '/bin:/usr/bin',         # path to set for logs etc.
		'preload'       => 0,						# objects at start, or as requested 
		'restricted'    => 1,                       # (0|1) (all|admin)->can(modify) 
		'separator'     => '/',                     # directory separator (/;\:...)
		'source' 		=>'Perlbug.tar.gz',			# name for latest code backup
		'timeout_auto'  => 360,                     # bug(cgi|cron|mail|tron)... 
		'timeout_interactive' => 33600,             # bug(db|fix|tk)
		'title'			=> 'Perlbug',		  		# :-)
		'user'          => 'perlbug',               # username on system
		'user_switches'	=> 'bBcdefghHjJlmnopqQrRsStuv', # normal user switches
	},
	#TARGET set off a new bug, undef -> generic
	'TARGET'	=> {							    
		'generic'     	=> [qw(perlbug@perl.com perlbug@perl.org)], # t
		'macos'        	=> [qw(macperlbug@perl.org)],              	# t
		'unix'     		=> [qw(perlbug@perl.com perlbug@perl.org)], # t
		'win32'     	=> [qw(perl-win32-porters@perl.org)],   	# t
		'module'     	=> [qw(modulebug@perl.org)],               	# t
		'dailybuild'    => [qw(dailybuild@bugs.perl.org)],          # t
		'ok'            => [qw(ok@bugs.perl.org)],					# t
		'test'          => [qw(targettest@bugs.perl.org perlbug-test@perl.org perlbug-test@bugs.perl.org)],		# t
	},
	#WEB                           
	'WEB'	=> { 
		'cgi'           => 'perlbug.cgi',               	   	# base script
		'domain'        => 'bugs.perl.org',                    	# top level domain
		'home'          => 'index.html',                       	# home address page
		'hard_wired_url'=> 'http://bugs.perl.org/index.html',	# hard-wired-url
		'htpasswd'      => '.htpasswd',                        	# in config dir!
		'logo'          => '<img src="images/perl_republic.gif">', # graphic
	},
	#
	# Perlbug Mail Matches for new bugs (better categorisation)
	'DEFAULT' 	=> { 	# DEFAULT
		'group'			=> 'unknown',		# d
		'osname'		=> 'generic',		# d
		'severity'		=> 'none',			# d
		'status'		=> 'open',			# d
		'version'		=> '5.0',			# d
	},
	'GROUP'	=> { 		# GROUP
		'\bsuccess\sreport\sfor\sperl\sfrom\b' 		=> 'ok', 		# OK report 
		'\bbuild\sfailure\sreport\sfor\sperl\sfrom' => 'install', 	# Not OK report
		'\btron_internal\b' 						=> 'notabug', 	# tron_internal
	},
	'SEVERITY'	=> {	# SEVERITY
		'\bsuccess\sreport\sfor\sperl\sfrom' 		=> 'none', 		# OK report 
		'\bbuild\sfailure\sreport\sfor\sperl\sfrom' => 'high', 		# Not OK report
		'\btron_internal\b' 						=> 'none', 		# tron_internal
		'\bdailybuild\b' 							=> 'none', 		# smoketests 
	},
	'STATUS'	=> { 	# STATUS
		'\bsuccess\sreport\sfor\sperl\sfrom' 		=> 'ok', 		# OK report 
		'\btron_internal\b' 						=> 'closed', 	# tron_internal
		'\bdailybuild\b' 							=> 'closed', 	# smoketests 
	},
	'VERSION'	=> { 	# VERSION
		# Summary of my perl5 (5.0 patchlevel 5 subversion 3) configuration:        
		# Summary of my perl5 (revision 5.0 version 5 subversion 640) configuration:    
		'(?:ummary\sof\smy\sperl\d+\s\((?:revision)*\s*(\d\.\d)\s(?:patchlevel|version)\s(\d+)\ssubversion\s(\d+))' => '$1.$2.$3',
		# generated with the help of perlbug 1.27 running under perl 5.00503.
		'(?:\brunning\sunder\sperl\sv*(\d[\d\.]+))'	=> '$1', 		# 
		'(?:\bperl\s+version\s*(\d[\d\.]+))'		=> '$1', 		# 
		# Site configuration information for perl 5.00503:
		'(?:\bconfiguration\sinformation\sfor\sperl\sv*(\d[\d\.]+))' => '$1', # 
	},
}; 	# Config

